// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/core/framework/tensor_shape.proto

package tensorflow;

public final class TensorShape {
  private TensorShape() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface TensorShapeProtoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:tensorflow.TensorShapeProto)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .tensorflow.TensorShapeProto.Dim dim = 2;</code>
     *
     * <pre>
     * Dimensions of the tensor, such as {"input", 30}, {"output", 40} for a 30 x
     * 40 2D tensor.  The names are optional.
     * The order of entries in "dim" matters: It indicates the layout of the
     * values in the tensor in-memory representation.
     * The first entry in "dim" is the outermost dimension used to layout the
     * values, the last entry is the innermost dimension.  This matches the
     * in-memory layout of RowMajor Eigen tensors.
     * </pre>
     */
    java.util.List<tensorflow.TensorShape.TensorShapeProto.Dim> 
        getDimList();
    /**
     * <code>repeated .tensorflow.TensorShapeProto.Dim dim = 2;</code>
     *
     * <pre>
     * Dimensions of the tensor, such as {"input", 30}, {"output", 40} for a 30 x
     * 40 2D tensor.  The names are optional.
     * The order of entries in "dim" matters: It indicates the layout of the
     * values in the tensor in-memory representation.
     * The first entry in "dim" is the outermost dimension used to layout the
     * values, the last entry is the innermost dimension.  This matches the
     * in-memory layout of RowMajor Eigen tensors.
     * </pre>
     */
    tensorflow.TensorShape.TensorShapeProto.Dim getDim(int index);
    /**
     * <code>repeated .tensorflow.TensorShapeProto.Dim dim = 2;</code>
     *
     * <pre>
     * Dimensions of the tensor, such as {"input", 30}, {"output", 40} for a 30 x
     * 40 2D tensor.  The names are optional.
     * The order of entries in "dim" matters: It indicates the layout of the
     * values in the tensor in-memory representation.
     * The first entry in "dim" is the outermost dimension used to layout the
     * values, the last entry is the innermost dimension.  This matches the
     * in-memory layout of RowMajor Eigen tensors.
     * </pre>
     */
    int getDimCount();
    /**
     * <code>repeated .tensorflow.TensorShapeProto.Dim dim = 2;</code>
     *
     * <pre>
     * Dimensions of the tensor, such as {"input", 30}, {"output", 40} for a 30 x
     * 40 2D tensor.  The names are optional.
     * The order of entries in "dim" matters: It indicates the layout of the
     * values in the tensor in-memory representation.
     * The first entry in "dim" is the outermost dimension used to layout the
     * values, the last entry is the innermost dimension.  This matches the
     * in-memory layout of RowMajor Eigen tensors.
     * </pre>
     */
    java.util.List<? extends tensorflow.TensorShape.TensorShapeProto.DimOrBuilder> 
        getDimOrBuilderList();
    /**
     * <code>repeated .tensorflow.TensorShapeProto.Dim dim = 2;</code>
     *
     * <pre>
     * Dimensions of the tensor, such as {"input", 30}, {"output", 40} for a 30 x
     * 40 2D tensor.  The names are optional.
     * The order of entries in "dim" matters: It indicates the layout of the
     * values in the tensor in-memory representation.
     * The first entry in "dim" is the outermost dimension used to layout the
     * values, the last entry is the innermost dimension.  This matches the
     * in-memory layout of RowMajor Eigen tensors.
     * </pre>
     */
    tensorflow.TensorShape.TensorShapeProto.DimOrBuilder getDimOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code tensorflow.TensorShapeProto}
   *
   * <pre>
   * Dimensions of a tensor and the type of data it contains.
   * </pre>
   */
  public  static final class TensorShapeProto extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:tensorflow.TensorShapeProto)
      TensorShapeProtoOrBuilder {
    // Use TensorShapeProto.newBuilder() to construct.
    private TensorShapeProto(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private TensorShapeProto() {
      dim_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private TensorShapeProto(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                dim_ = new java.util.ArrayList<tensorflow.TensorShape.TensorShapeProto.Dim>();
                mutable_bitField0_ |= 0x00000001;
              }
              dim_.add(input.readMessage(tensorflow.TensorShape.TensorShapeProto.Dim.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw new RuntimeException(e.setUnfinishedMessage(this));
      } catch (java.io.IOException e) {
        throw new RuntimeException(
            new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this));
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          dim_ = java.util.Collections.unmodifiableList(dim_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return tensorflow.TensorShape.internal_static_tensorflow_TensorShapeProto_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return tensorflow.TensorShape.internal_static_tensorflow_TensorShapeProto_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              tensorflow.TensorShape.TensorShapeProto.class, tensorflow.TensorShape.TensorShapeProto.Builder.class);
    }

    public interface DimOrBuilder extends
        // @@protoc_insertion_point(interface_extends:tensorflow.TensorShapeProto.Dim)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional int64 size = 1;</code>
       *
       * <pre>
       * Size of the tensor in that dimension.
       * </pre>
       */
      long getSize();

      /**
       * <code>optional string name = 2;</code>
       *
       * <pre>
       * Optional name of the tensor dimension.
       * </pre>
       */
      java.lang.String getName();
      /**
       * <code>optional string name = 2;</code>
       *
       * <pre>
       * Optional name of the tensor dimension.
       * </pre>
       */
      com.google.protobuf.ByteString
          getNameBytes();
    }
    /**
     * Protobuf type {@code tensorflow.TensorShapeProto.Dim}
     *
     * <pre>
     * One dimension of the tensor.
     * </pre>
     */
    public  static final class Dim extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:tensorflow.TensorShapeProto.Dim)
        DimOrBuilder {
      // Use Dim.newBuilder() to construct.
      private Dim(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
      }
      private Dim() {
        size_ = 0L;
        name_ = "";
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
      }
      private Dim(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
        this();
        int mutable_bitField0_ = 0;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!input.skipField(tag)) {
                  done = true;
                }
                break;
              }
              case 8: {

                size_ = input.readInt64();
                break;
              }
              case 18: {
                String s = input.readStringRequireUtf8();

                name_ = s;
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw new RuntimeException(e.setUnfinishedMessage(this));
        } catch (java.io.IOException e) {
          throw new RuntimeException(
              new com.google.protobuf.InvalidProtocolBufferException(
                  e.getMessage()).setUnfinishedMessage(this));
        } finally {
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return tensorflow.TensorShape.internal_static_tensorflow_TensorShapeProto_Dim_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return tensorflow.TensorShape.internal_static_tensorflow_TensorShapeProto_Dim_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                tensorflow.TensorShape.TensorShapeProto.Dim.class, tensorflow.TensorShape.TensorShapeProto.Dim.Builder.class);
      }

      public static final int SIZE_FIELD_NUMBER = 1;
      private long size_;
      /**
       * <code>optional int64 size = 1;</code>
       *
       * <pre>
       * Size of the tensor in that dimension.
       * </pre>
       */
      public long getSize() {
        return size_;
      }

      public static final int NAME_FIELD_NUMBER = 2;
      private volatile java.lang.Object name_;
      /**
       * <code>optional string name = 2;</code>
       *
       * <pre>
       * Optional name of the tensor dimension.
       * </pre>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        }
      }
      /**
       * <code>optional string name = 2;</code>
       *
       * <pre>
       * Optional name of the tensor dimension.
       * </pre>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (size_ != 0L) {
          output.writeInt64(1, size_);
        }
        if (!getNameBytes().isEmpty()) {
          com.google.protobuf.GeneratedMessage.writeString(output, 2, name_);
        }
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (size_ != 0L) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt64Size(1, size_);
        }
        if (!getNameBytes().isEmpty()) {
          size += com.google.protobuf.GeneratedMessage.computeStringSize(2, name_);
        }
        memoizedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      public static tensorflow.TensorShape.TensorShapeProto.Dim parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static tensorflow.TensorShape.TensorShapeProto.Dim parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static tensorflow.TensorShape.TensorShapeProto.Dim parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static tensorflow.TensorShape.TensorShapeProto.Dim parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static tensorflow.TensorShape.TensorShapeProto.Dim parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static tensorflow.TensorShape.TensorShapeProto.Dim parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static tensorflow.TensorShape.TensorShapeProto.Dim parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static tensorflow.TensorShape.TensorShapeProto.Dim parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static tensorflow.TensorShape.TensorShapeProto.Dim parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static tensorflow.TensorShape.TensorShapeProto.Dim parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(tensorflow.TensorShape.TensorShapeProto.Dim prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code tensorflow.TensorShapeProto.Dim}
       *
       * <pre>
       * One dimension of the tensor.
       * </pre>
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:tensorflow.TensorShapeProto.Dim)
          tensorflow.TensorShape.TensorShapeProto.DimOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return tensorflow.TensorShape.internal_static_tensorflow_TensorShapeProto_Dim_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return tensorflow.TensorShape.internal_static_tensorflow_TensorShapeProto_Dim_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  tensorflow.TensorShape.TensorShapeProto.Dim.class, tensorflow.TensorShape.TensorShapeProto.Dim.Builder.class);
        }

        // Construct using tensorflow.TensorShape.TensorShapeProto.Dim.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          size_ = 0L;

          name_ = "";

          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return tensorflow.TensorShape.internal_static_tensorflow_TensorShapeProto_Dim_descriptor;
        }

        public tensorflow.TensorShape.TensorShapeProto.Dim getDefaultInstanceForType() {
          return tensorflow.TensorShape.TensorShapeProto.Dim.getDefaultInstance();
        }

        public tensorflow.TensorShape.TensorShapeProto.Dim build() {
          tensorflow.TensorShape.TensorShapeProto.Dim result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public tensorflow.TensorShape.TensorShapeProto.Dim buildPartial() {
          tensorflow.TensorShape.TensorShapeProto.Dim result = new tensorflow.TensorShape.TensorShapeProto.Dim(this);
          result.size_ = size_;
          result.name_ = name_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof tensorflow.TensorShape.TensorShapeProto.Dim) {
            return mergeFrom((tensorflow.TensorShape.TensorShapeProto.Dim)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(tensorflow.TensorShape.TensorShapeProto.Dim other) {
          if (other == tensorflow.TensorShape.TensorShapeProto.Dim.getDefaultInstance()) return this;
          if (other.getSize() != 0L) {
            setSize(other.getSize());
          }
          if (!other.getName().isEmpty()) {
            name_ = other.name_;
            onChanged();
          }
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          tensorflow.TensorShape.TensorShapeProto.Dim parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (tensorflow.TensorShape.TensorShapeProto.Dim) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private long size_ ;
        /**
         * <code>optional int64 size = 1;</code>
         *
         * <pre>
         * Size of the tensor in that dimension.
         * </pre>
         */
        public long getSize() {
          return size_;
        }
        /**
         * <code>optional int64 size = 1;</code>
         *
         * <pre>
         * Size of the tensor in that dimension.
         * </pre>
         */
        public Builder setSize(long value) {
          
          size_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int64 size = 1;</code>
         *
         * <pre>
         * Size of the tensor in that dimension.
         * </pre>
         */
        public Builder clearSize() {
          
          size_ = 0L;
          onChanged();
          return this;
        }

        private java.lang.Object name_ = "";
        /**
         * <code>optional string name = 2;</code>
         *
         * <pre>
         * Optional name of the tensor dimension.
         * </pre>
         */
        public java.lang.String getName() {
          java.lang.Object ref = name_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            name_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string name = 2;</code>
         *
         * <pre>
         * Optional name of the tensor dimension.
         * </pre>
         */
        public com.google.protobuf.ByteString
            getNameBytes() {
          java.lang.Object ref = name_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            name_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string name = 2;</code>
         *
         * <pre>
         * Optional name of the tensor dimension.
         * </pre>
         */
        public Builder setName(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  
          name_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string name = 2;</code>
         *
         * <pre>
         * Optional name of the tensor dimension.
         * </pre>
         */
        public Builder clearName() {
          
          name_ = getDefaultInstance().getName();
          onChanged();
          return this;
        }
        /**
         * <code>optional string name = 2;</code>
         *
         * <pre>
         * Optional name of the tensor dimension.
         * </pre>
         */
        public Builder setNameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          
          name_ = value;
          onChanged();
          return this;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }


        // @@protoc_insertion_point(builder_scope:tensorflow.TensorShapeProto.Dim)
      }

      // @@protoc_insertion_point(class_scope:tensorflow.TensorShapeProto.Dim)
      private static final tensorflow.TensorShape.TensorShapeProto.Dim DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new tensorflow.TensorShape.TensorShapeProto.Dim();
      }

      public static tensorflow.TensorShape.TensorShapeProto.Dim getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Dim>
          PARSER = new com.google.protobuf.AbstractParser<Dim>() {
        public Dim parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          try {
            return new Dim(input, extensionRegistry);
          } catch (RuntimeException e) {
            if (e.getCause() instanceof
                com.google.protobuf.InvalidProtocolBufferException) {
              throw (com.google.protobuf.InvalidProtocolBufferException)
                  e.getCause();
            }
            throw e;
          }
        }
      };

      public static com.google.protobuf.Parser<Dim> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Dim> getParserForType() {
        return PARSER;
      }

      public tensorflow.TensorShape.TensorShapeProto.Dim getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public static final int DIM_FIELD_NUMBER = 2;
    private java.util.List<tensorflow.TensorShape.TensorShapeProto.Dim> dim_;
    /**
     * <code>repeated .tensorflow.TensorShapeProto.Dim dim = 2;</code>
     *
     * <pre>
     * Dimensions of the tensor, such as {"input", 30}, {"output", 40} for a 30 x
     * 40 2D tensor.  The names are optional.
     * The order of entries in "dim" matters: It indicates the layout of the
     * values in the tensor in-memory representation.
     * The first entry in "dim" is the outermost dimension used to layout the
     * values, the last entry is the innermost dimension.  This matches the
     * in-memory layout of RowMajor Eigen tensors.
     * </pre>
     */
    public java.util.List<tensorflow.TensorShape.TensorShapeProto.Dim> getDimList() {
      return dim_;
    }
    /**
     * <code>repeated .tensorflow.TensorShapeProto.Dim dim = 2;</code>
     *
     * <pre>
     * Dimensions of the tensor, such as {"input", 30}, {"output", 40} for a 30 x
     * 40 2D tensor.  The names are optional.
     * The order of entries in "dim" matters: It indicates the layout of the
     * values in the tensor in-memory representation.
     * The first entry in "dim" is the outermost dimension used to layout the
     * values, the last entry is the innermost dimension.  This matches the
     * in-memory layout of RowMajor Eigen tensors.
     * </pre>
     */
    public java.util.List<? extends tensorflow.TensorShape.TensorShapeProto.DimOrBuilder> 
        getDimOrBuilderList() {
      return dim_;
    }
    /**
     * <code>repeated .tensorflow.TensorShapeProto.Dim dim = 2;</code>
     *
     * <pre>
     * Dimensions of the tensor, such as {"input", 30}, {"output", 40} for a 30 x
     * 40 2D tensor.  The names are optional.
     * The order of entries in "dim" matters: It indicates the layout of the
     * values in the tensor in-memory representation.
     * The first entry in "dim" is the outermost dimension used to layout the
     * values, the last entry is the innermost dimension.  This matches the
     * in-memory layout of RowMajor Eigen tensors.
     * </pre>
     */
    public int getDimCount() {
      return dim_.size();
    }
    /**
     * <code>repeated .tensorflow.TensorShapeProto.Dim dim = 2;</code>
     *
     * <pre>
     * Dimensions of the tensor, such as {"input", 30}, {"output", 40} for a 30 x
     * 40 2D tensor.  The names are optional.
     * The order of entries in "dim" matters: It indicates the layout of the
     * values in the tensor in-memory representation.
     * The first entry in "dim" is the outermost dimension used to layout the
     * values, the last entry is the innermost dimension.  This matches the
     * in-memory layout of RowMajor Eigen tensors.
     * </pre>
     */
    public tensorflow.TensorShape.TensorShapeProto.Dim getDim(int index) {
      return dim_.get(index);
    }
    /**
     * <code>repeated .tensorflow.TensorShapeProto.Dim dim = 2;</code>
     *
     * <pre>
     * Dimensions of the tensor, such as {"input", 30}, {"output", 40} for a 30 x
     * 40 2D tensor.  The names are optional.
     * The order of entries in "dim" matters: It indicates the layout of the
     * values in the tensor in-memory representation.
     * The first entry in "dim" is the outermost dimension used to layout the
     * values, the last entry is the innermost dimension.  This matches the
     * in-memory layout of RowMajor Eigen tensors.
     * </pre>
     */
    public tensorflow.TensorShape.TensorShapeProto.DimOrBuilder getDimOrBuilder(
        int index) {
      return dim_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < dim_.size(); i++) {
        output.writeMessage(2, dim_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < dim_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, dim_.get(i));
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static tensorflow.TensorShape.TensorShapeProto parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.TensorShape.TensorShapeProto parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.TensorShape.TensorShapeProto parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.TensorShape.TensorShapeProto parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.TensorShape.TensorShapeProto parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static tensorflow.TensorShape.TensorShapeProto parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static tensorflow.TensorShape.TensorShapeProto parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static tensorflow.TensorShape.TensorShapeProto parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static tensorflow.TensorShape.TensorShapeProto parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static tensorflow.TensorShape.TensorShapeProto parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(tensorflow.TensorShape.TensorShapeProto prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code tensorflow.TensorShapeProto}
     *
     * <pre>
     * Dimensions of a tensor and the type of data it contains.
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:tensorflow.TensorShapeProto)
        tensorflow.TensorShape.TensorShapeProtoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return tensorflow.TensorShape.internal_static_tensorflow_TensorShapeProto_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return tensorflow.TensorShape.internal_static_tensorflow_TensorShapeProto_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                tensorflow.TensorShape.TensorShapeProto.class, tensorflow.TensorShape.TensorShapeProto.Builder.class);
      }

      // Construct using tensorflow.TensorShape.TensorShapeProto.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getDimFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (dimBuilder_ == null) {
          dim_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          dimBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return tensorflow.TensorShape.internal_static_tensorflow_TensorShapeProto_descriptor;
      }

      public tensorflow.TensorShape.TensorShapeProto getDefaultInstanceForType() {
        return tensorflow.TensorShape.TensorShapeProto.getDefaultInstance();
      }

      public tensorflow.TensorShape.TensorShapeProto build() {
        tensorflow.TensorShape.TensorShapeProto result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public tensorflow.TensorShape.TensorShapeProto buildPartial() {
        tensorflow.TensorShape.TensorShapeProto result = new tensorflow.TensorShape.TensorShapeProto(this);
        int from_bitField0_ = bitField0_;
        if (dimBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            dim_ = java.util.Collections.unmodifiableList(dim_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.dim_ = dim_;
        } else {
          result.dim_ = dimBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof tensorflow.TensorShape.TensorShapeProto) {
          return mergeFrom((tensorflow.TensorShape.TensorShapeProto)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(tensorflow.TensorShape.TensorShapeProto other) {
        if (other == tensorflow.TensorShape.TensorShapeProto.getDefaultInstance()) return this;
        if (dimBuilder_ == null) {
          if (!other.dim_.isEmpty()) {
            if (dim_.isEmpty()) {
              dim_ = other.dim_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureDimIsMutable();
              dim_.addAll(other.dim_);
            }
            onChanged();
          }
        } else {
          if (!other.dim_.isEmpty()) {
            if (dimBuilder_.isEmpty()) {
              dimBuilder_.dispose();
              dimBuilder_ = null;
              dim_ = other.dim_;
              bitField0_ = (bitField0_ & ~0x00000001);
              dimBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getDimFieldBuilder() : null;
            } else {
              dimBuilder_.addAllMessages(other.dim_);
            }
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        tensorflow.TensorShape.TensorShapeProto parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (tensorflow.TensorShape.TensorShapeProto) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<tensorflow.TensorShape.TensorShapeProto.Dim> dim_ =
        java.util.Collections.emptyList();
      private void ensureDimIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          dim_ = new java.util.ArrayList<tensorflow.TensorShape.TensorShapeProto.Dim>(dim_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          tensorflow.TensorShape.TensorShapeProto.Dim, tensorflow.TensorShape.TensorShapeProto.Dim.Builder, tensorflow.TensorShape.TensorShapeProto.DimOrBuilder> dimBuilder_;

      /**
       * <code>repeated .tensorflow.TensorShapeProto.Dim dim = 2;</code>
       *
       * <pre>
       * Dimensions of the tensor, such as {"input", 30}, {"output", 40} for a 30 x
       * 40 2D tensor.  The names are optional.
       * The order of entries in "dim" matters: It indicates the layout of the
       * values in the tensor in-memory representation.
       * The first entry in "dim" is the outermost dimension used to layout the
       * values, the last entry is the innermost dimension.  This matches the
       * in-memory layout of RowMajor Eigen tensors.
       * </pre>
       */
      public java.util.List<tensorflow.TensorShape.TensorShapeProto.Dim> getDimList() {
        if (dimBuilder_ == null) {
          return java.util.Collections.unmodifiableList(dim_);
        } else {
          return dimBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .tensorflow.TensorShapeProto.Dim dim = 2;</code>
       *
       * <pre>
       * Dimensions of the tensor, such as {"input", 30}, {"output", 40} for a 30 x
       * 40 2D tensor.  The names are optional.
       * The order of entries in "dim" matters: It indicates the layout of the
       * values in the tensor in-memory representation.
       * The first entry in "dim" is the outermost dimension used to layout the
       * values, the last entry is the innermost dimension.  This matches the
       * in-memory layout of RowMajor Eigen tensors.
       * </pre>
       */
      public int getDimCount() {
        if (dimBuilder_ == null) {
          return dim_.size();
        } else {
          return dimBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .tensorflow.TensorShapeProto.Dim dim = 2;</code>
       *
       * <pre>
       * Dimensions of the tensor, such as {"input", 30}, {"output", 40} for a 30 x
       * 40 2D tensor.  The names are optional.
       * The order of entries in "dim" matters: It indicates the layout of the
       * values in the tensor in-memory representation.
       * The first entry in "dim" is the outermost dimension used to layout the
       * values, the last entry is the innermost dimension.  This matches the
       * in-memory layout of RowMajor Eigen tensors.
       * </pre>
       */
      public tensorflow.TensorShape.TensorShapeProto.Dim getDim(int index) {
        if (dimBuilder_ == null) {
          return dim_.get(index);
        } else {
          return dimBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .tensorflow.TensorShapeProto.Dim dim = 2;</code>
       *
       * <pre>
       * Dimensions of the tensor, such as {"input", 30}, {"output", 40} for a 30 x
       * 40 2D tensor.  The names are optional.
       * The order of entries in "dim" matters: It indicates the layout of the
       * values in the tensor in-memory representation.
       * The first entry in "dim" is the outermost dimension used to layout the
       * values, the last entry is the innermost dimension.  This matches the
       * in-memory layout of RowMajor Eigen tensors.
       * </pre>
       */
      public Builder setDim(
          int index, tensorflow.TensorShape.TensorShapeProto.Dim value) {
        if (dimBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDimIsMutable();
          dim_.set(index, value);
          onChanged();
        } else {
          dimBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .tensorflow.TensorShapeProto.Dim dim = 2;</code>
       *
       * <pre>
       * Dimensions of the tensor, such as {"input", 30}, {"output", 40} for a 30 x
       * 40 2D tensor.  The names are optional.
       * The order of entries in "dim" matters: It indicates the layout of the
       * values in the tensor in-memory representation.
       * The first entry in "dim" is the outermost dimension used to layout the
       * values, the last entry is the innermost dimension.  This matches the
       * in-memory layout of RowMajor Eigen tensors.
       * </pre>
       */
      public Builder setDim(
          int index, tensorflow.TensorShape.TensorShapeProto.Dim.Builder builderForValue) {
        if (dimBuilder_ == null) {
          ensureDimIsMutable();
          dim_.set(index, builderForValue.build());
          onChanged();
        } else {
          dimBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .tensorflow.TensorShapeProto.Dim dim = 2;</code>
       *
       * <pre>
       * Dimensions of the tensor, such as {"input", 30}, {"output", 40} for a 30 x
       * 40 2D tensor.  The names are optional.
       * The order of entries in "dim" matters: It indicates the layout of the
       * values in the tensor in-memory representation.
       * The first entry in "dim" is the outermost dimension used to layout the
       * values, the last entry is the innermost dimension.  This matches the
       * in-memory layout of RowMajor Eigen tensors.
       * </pre>
       */
      public Builder addDim(tensorflow.TensorShape.TensorShapeProto.Dim value) {
        if (dimBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDimIsMutable();
          dim_.add(value);
          onChanged();
        } else {
          dimBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .tensorflow.TensorShapeProto.Dim dim = 2;</code>
       *
       * <pre>
       * Dimensions of the tensor, such as {"input", 30}, {"output", 40} for a 30 x
       * 40 2D tensor.  The names are optional.
       * The order of entries in "dim" matters: It indicates the layout of the
       * values in the tensor in-memory representation.
       * The first entry in "dim" is the outermost dimension used to layout the
       * values, the last entry is the innermost dimension.  This matches the
       * in-memory layout of RowMajor Eigen tensors.
       * </pre>
       */
      public Builder addDim(
          int index, tensorflow.TensorShape.TensorShapeProto.Dim value) {
        if (dimBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDimIsMutable();
          dim_.add(index, value);
          onChanged();
        } else {
          dimBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .tensorflow.TensorShapeProto.Dim dim = 2;</code>
       *
       * <pre>
       * Dimensions of the tensor, such as {"input", 30}, {"output", 40} for a 30 x
       * 40 2D tensor.  The names are optional.
       * The order of entries in "dim" matters: It indicates the layout of the
       * values in the tensor in-memory representation.
       * The first entry in "dim" is the outermost dimension used to layout the
       * values, the last entry is the innermost dimension.  This matches the
       * in-memory layout of RowMajor Eigen tensors.
       * </pre>
       */
      public Builder addDim(
          tensorflow.TensorShape.TensorShapeProto.Dim.Builder builderForValue) {
        if (dimBuilder_ == null) {
          ensureDimIsMutable();
          dim_.add(builderForValue.build());
          onChanged();
        } else {
          dimBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .tensorflow.TensorShapeProto.Dim dim = 2;</code>
       *
       * <pre>
       * Dimensions of the tensor, such as {"input", 30}, {"output", 40} for a 30 x
       * 40 2D tensor.  The names are optional.
       * The order of entries in "dim" matters: It indicates the layout of the
       * values in the tensor in-memory representation.
       * The first entry in "dim" is the outermost dimension used to layout the
       * values, the last entry is the innermost dimension.  This matches the
       * in-memory layout of RowMajor Eigen tensors.
       * </pre>
       */
      public Builder addDim(
          int index, tensorflow.TensorShape.TensorShapeProto.Dim.Builder builderForValue) {
        if (dimBuilder_ == null) {
          ensureDimIsMutable();
          dim_.add(index, builderForValue.build());
          onChanged();
        } else {
          dimBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .tensorflow.TensorShapeProto.Dim dim = 2;</code>
       *
       * <pre>
       * Dimensions of the tensor, such as {"input", 30}, {"output", 40} for a 30 x
       * 40 2D tensor.  The names are optional.
       * The order of entries in "dim" matters: It indicates the layout of the
       * values in the tensor in-memory representation.
       * The first entry in "dim" is the outermost dimension used to layout the
       * values, the last entry is the innermost dimension.  This matches the
       * in-memory layout of RowMajor Eigen tensors.
       * </pre>
       */
      public Builder addAllDim(
          java.lang.Iterable<? extends tensorflow.TensorShape.TensorShapeProto.Dim> values) {
        if (dimBuilder_ == null) {
          ensureDimIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, dim_);
          onChanged();
        } else {
          dimBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .tensorflow.TensorShapeProto.Dim dim = 2;</code>
       *
       * <pre>
       * Dimensions of the tensor, such as {"input", 30}, {"output", 40} for a 30 x
       * 40 2D tensor.  The names are optional.
       * The order of entries in "dim" matters: It indicates the layout of the
       * values in the tensor in-memory representation.
       * The first entry in "dim" is the outermost dimension used to layout the
       * values, the last entry is the innermost dimension.  This matches the
       * in-memory layout of RowMajor Eigen tensors.
       * </pre>
       */
      public Builder clearDim() {
        if (dimBuilder_ == null) {
          dim_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          dimBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .tensorflow.TensorShapeProto.Dim dim = 2;</code>
       *
       * <pre>
       * Dimensions of the tensor, such as {"input", 30}, {"output", 40} for a 30 x
       * 40 2D tensor.  The names are optional.
       * The order of entries in "dim" matters: It indicates the layout of the
       * values in the tensor in-memory representation.
       * The first entry in "dim" is the outermost dimension used to layout the
       * values, the last entry is the innermost dimension.  This matches the
       * in-memory layout of RowMajor Eigen tensors.
       * </pre>
       */
      public Builder removeDim(int index) {
        if (dimBuilder_ == null) {
          ensureDimIsMutable();
          dim_.remove(index);
          onChanged();
        } else {
          dimBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .tensorflow.TensorShapeProto.Dim dim = 2;</code>
       *
       * <pre>
       * Dimensions of the tensor, such as {"input", 30}, {"output", 40} for a 30 x
       * 40 2D tensor.  The names are optional.
       * The order of entries in "dim" matters: It indicates the layout of the
       * values in the tensor in-memory representation.
       * The first entry in "dim" is the outermost dimension used to layout the
       * values, the last entry is the innermost dimension.  This matches the
       * in-memory layout of RowMajor Eigen tensors.
       * </pre>
       */
      public tensorflow.TensorShape.TensorShapeProto.Dim.Builder getDimBuilder(
          int index) {
        return getDimFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .tensorflow.TensorShapeProto.Dim dim = 2;</code>
       *
       * <pre>
       * Dimensions of the tensor, such as {"input", 30}, {"output", 40} for a 30 x
       * 40 2D tensor.  The names are optional.
       * The order of entries in "dim" matters: It indicates the layout of the
       * values in the tensor in-memory representation.
       * The first entry in "dim" is the outermost dimension used to layout the
       * values, the last entry is the innermost dimension.  This matches the
       * in-memory layout of RowMajor Eigen tensors.
       * </pre>
       */
      public tensorflow.TensorShape.TensorShapeProto.DimOrBuilder getDimOrBuilder(
          int index) {
        if (dimBuilder_ == null) {
          return dim_.get(index);  } else {
          return dimBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .tensorflow.TensorShapeProto.Dim dim = 2;</code>
       *
       * <pre>
       * Dimensions of the tensor, such as {"input", 30}, {"output", 40} for a 30 x
       * 40 2D tensor.  The names are optional.
       * The order of entries in "dim" matters: It indicates the layout of the
       * values in the tensor in-memory representation.
       * The first entry in "dim" is the outermost dimension used to layout the
       * values, the last entry is the innermost dimension.  This matches the
       * in-memory layout of RowMajor Eigen tensors.
       * </pre>
       */
      public java.util.List<? extends tensorflow.TensorShape.TensorShapeProto.DimOrBuilder> 
           getDimOrBuilderList() {
        if (dimBuilder_ != null) {
          return dimBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(dim_);
        }
      }
      /**
       * <code>repeated .tensorflow.TensorShapeProto.Dim dim = 2;</code>
       *
       * <pre>
       * Dimensions of the tensor, such as {"input", 30}, {"output", 40} for a 30 x
       * 40 2D tensor.  The names are optional.
       * The order of entries in "dim" matters: It indicates the layout of the
       * values in the tensor in-memory representation.
       * The first entry in "dim" is the outermost dimension used to layout the
       * values, the last entry is the innermost dimension.  This matches the
       * in-memory layout of RowMajor Eigen tensors.
       * </pre>
       */
      public tensorflow.TensorShape.TensorShapeProto.Dim.Builder addDimBuilder() {
        return getDimFieldBuilder().addBuilder(
            tensorflow.TensorShape.TensorShapeProto.Dim.getDefaultInstance());
      }
      /**
       * <code>repeated .tensorflow.TensorShapeProto.Dim dim = 2;</code>
       *
       * <pre>
       * Dimensions of the tensor, such as {"input", 30}, {"output", 40} for a 30 x
       * 40 2D tensor.  The names are optional.
       * The order of entries in "dim" matters: It indicates the layout of the
       * values in the tensor in-memory representation.
       * The first entry in "dim" is the outermost dimension used to layout the
       * values, the last entry is the innermost dimension.  This matches the
       * in-memory layout of RowMajor Eigen tensors.
       * </pre>
       */
      public tensorflow.TensorShape.TensorShapeProto.Dim.Builder addDimBuilder(
          int index) {
        return getDimFieldBuilder().addBuilder(
            index, tensorflow.TensorShape.TensorShapeProto.Dim.getDefaultInstance());
      }
      /**
       * <code>repeated .tensorflow.TensorShapeProto.Dim dim = 2;</code>
       *
       * <pre>
       * Dimensions of the tensor, such as {"input", 30}, {"output", 40} for a 30 x
       * 40 2D tensor.  The names are optional.
       * The order of entries in "dim" matters: It indicates the layout of the
       * values in the tensor in-memory representation.
       * The first entry in "dim" is the outermost dimension used to layout the
       * values, the last entry is the innermost dimension.  This matches the
       * in-memory layout of RowMajor Eigen tensors.
       * </pre>
       */
      public java.util.List<tensorflow.TensorShape.TensorShapeProto.Dim.Builder> 
           getDimBuilderList() {
        return getDimFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          tensorflow.TensorShape.TensorShapeProto.Dim, tensorflow.TensorShape.TensorShapeProto.Dim.Builder, tensorflow.TensorShape.TensorShapeProto.DimOrBuilder> 
          getDimFieldBuilder() {
        if (dimBuilder_ == null) {
          dimBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              tensorflow.TensorShape.TensorShapeProto.Dim, tensorflow.TensorShape.TensorShapeProto.Dim.Builder, tensorflow.TensorShape.TensorShapeProto.DimOrBuilder>(
                  dim_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          dim_ = null;
        }
        return dimBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:tensorflow.TensorShapeProto)
    }

    // @@protoc_insertion_point(class_scope:tensorflow.TensorShapeProto)
    private static final tensorflow.TensorShape.TensorShapeProto DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new tensorflow.TensorShape.TensorShapeProto();
    }

    public static tensorflow.TensorShape.TensorShapeProto getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TensorShapeProto>
        PARSER = new com.google.protobuf.AbstractParser<TensorShapeProto>() {
      public TensorShapeProto parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        try {
          return new TensorShapeProto(input, extensionRegistry);
        } catch (RuntimeException e) {
          if (e.getCause() instanceof
              com.google.protobuf.InvalidProtocolBufferException) {
            throw (com.google.protobuf.InvalidProtocolBufferException)
                e.getCause();
          }
          throw e;
        }
      }
    };

    public static com.google.protobuf.Parser<TensorShapeProto> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TensorShapeProto> getParserForType() {
      return PARSER;
    }

    public tensorflow.TensorShape.TensorShapeProto getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_tensorflow_TensorShapeProto_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_tensorflow_TensorShapeProto_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_tensorflow_TensorShapeProto_Dim_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_tensorflow_TensorShapeProto_Dim_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n,tensorflow/core/framework/tensor_shape" +
      ".proto\022\ntensorflow\"d\n\020TensorShapeProto\022-" +
      "\n\003dim\030\002 \003(\0132 .tensorflow.TensorShapeProt" +
      "o.Dim\032!\n\003Dim\022\014\n\004size\030\001 \001(\003\022\014\n\004name\030\002 \001(\t" +
      "b\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_tensorflow_TensorShapeProto_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_tensorflow_TensorShapeProto_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_tensorflow_TensorShapeProto_descriptor,
        new java.lang.String[] { "Dim", });
    internal_static_tensorflow_TensorShapeProto_Dim_descriptor =
      internal_static_tensorflow_TensorShapeProto_descriptor.getNestedTypes().get(0);
    internal_static_tensorflow_TensorShapeProto_Dim_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_tensorflow_TensorShapeProto_Dim_descriptor,
        new java.lang.String[] { "Size", "Name", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
