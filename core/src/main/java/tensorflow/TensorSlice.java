// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/core/framework/tensor_slice.proto

package tensorflow;

public final class TensorSlice {
  private TensorSlice() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface TensorSliceProtoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:tensorflow.TensorSliceProto)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .tensorflow.TensorSliceProto.Extent extent = 1;</code>
     *
     * <pre>
     * Extent of the slice in all tensor dimensions.
     * Must have one entry for each of the dimension of the tensor that this
     * slice belongs to.  The order of sizes is the same as the order of
     * dimensions in the TensorShape.
     * </pre>
     */
    java.util.List<tensorflow.TensorSlice.TensorSliceProto.Extent> 
        getExtentList();
    /**
     * <code>repeated .tensorflow.TensorSliceProto.Extent extent = 1;</code>
     *
     * <pre>
     * Extent of the slice in all tensor dimensions.
     * Must have one entry for each of the dimension of the tensor that this
     * slice belongs to.  The order of sizes is the same as the order of
     * dimensions in the TensorShape.
     * </pre>
     */
    tensorflow.TensorSlice.TensorSliceProto.Extent getExtent(int index);
    /**
     * <code>repeated .tensorflow.TensorSliceProto.Extent extent = 1;</code>
     *
     * <pre>
     * Extent of the slice in all tensor dimensions.
     * Must have one entry for each of the dimension of the tensor that this
     * slice belongs to.  The order of sizes is the same as the order of
     * dimensions in the TensorShape.
     * </pre>
     */
    int getExtentCount();
    /**
     * <code>repeated .tensorflow.TensorSliceProto.Extent extent = 1;</code>
     *
     * <pre>
     * Extent of the slice in all tensor dimensions.
     * Must have one entry for each of the dimension of the tensor that this
     * slice belongs to.  The order of sizes is the same as the order of
     * dimensions in the TensorShape.
     * </pre>
     */
    java.util.List<? extends tensorflow.TensorSlice.TensorSliceProto.ExtentOrBuilder> 
        getExtentOrBuilderList();
    /**
     * <code>repeated .tensorflow.TensorSliceProto.Extent extent = 1;</code>
     *
     * <pre>
     * Extent of the slice in all tensor dimensions.
     * Must have one entry for each of the dimension of the tensor that this
     * slice belongs to.  The order of sizes is the same as the order of
     * dimensions in the TensorShape.
     * </pre>
     */
    tensorflow.TensorSlice.TensorSliceProto.ExtentOrBuilder getExtentOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code tensorflow.TensorSliceProto}
   *
   * <pre>
   * Can only be interpreted if you know the corresponding TensorShape.
   * </pre>
   */
  public  static final class TensorSliceProto extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:tensorflow.TensorSliceProto)
      TensorSliceProtoOrBuilder {
    // Use TensorSliceProto.newBuilder() to construct.
    private TensorSliceProto(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private TensorSliceProto() {
      extent_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private TensorSliceProto(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                extent_ = new java.util.ArrayList<tensorflow.TensorSlice.TensorSliceProto.Extent>();
                mutable_bitField0_ |= 0x00000001;
              }
              extent_.add(input.readMessage(tensorflow.TensorSlice.TensorSliceProto.Extent.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw new RuntimeException(e.setUnfinishedMessage(this));
      } catch (java.io.IOException e) {
        throw new RuntimeException(
            new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this));
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          extent_ = java.util.Collections.unmodifiableList(extent_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return tensorflow.TensorSlice.internal_static_tensorflow_TensorSliceProto_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return tensorflow.TensorSlice.internal_static_tensorflow_TensorSliceProto_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              tensorflow.TensorSlice.TensorSliceProto.class, tensorflow.TensorSlice.TensorSliceProto.Builder.class);
    }

    public interface ExtentOrBuilder extends
        // @@protoc_insertion_point(interface_extends:tensorflow.TensorSliceProto.Extent)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional int64 start = 1;</code>
       *
       * <pre>
       * Start index of the slice, starting at 0.
       * </pre>
       */
      long getStart();

      /**
       * <code>optional int64 length = 2;</code>
       */
      long getLength();

      public tensorflow.TensorSlice.TensorSliceProto.Extent.HasLengthCase getHasLengthCase();
    }
    /**
     * Protobuf type {@code tensorflow.TensorSliceProto.Extent}
     *
     * <pre>
     * Extent of the slice in one dimension.
     * </pre>
     */
    public  static final class Extent extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:tensorflow.TensorSliceProto.Extent)
        ExtentOrBuilder {
      // Use Extent.newBuilder() to construct.
      private Extent(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
      }
      private Extent() {
        start_ = 0L;
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
      }
      private Extent(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
        this();
        int mutable_bitField0_ = 0;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!input.skipField(tag)) {
                  done = true;
                }
                break;
              }
              case 8: {

                start_ = input.readInt64();
                break;
              }
              case 16: {
                hasLengthCase_ = 2;
                hasLength_ = input.readInt64();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw new RuntimeException(e.setUnfinishedMessage(this));
        } catch (java.io.IOException e) {
          throw new RuntimeException(
              new com.google.protobuf.InvalidProtocolBufferException(
                  e.getMessage()).setUnfinishedMessage(this));
        } finally {
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return tensorflow.TensorSlice.internal_static_tensorflow_TensorSliceProto_Extent_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return tensorflow.TensorSlice.internal_static_tensorflow_TensorSliceProto_Extent_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                tensorflow.TensorSlice.TensorSliceProto.Extent.class, tensorflow.TensorSlice.TensorSliceProto.Extent.Builder.class);
      }

      private int hasLengthCase_ = 0;
      private java.lang.Object hasLength_;
      public enum HasLengthCase
          implements com.google.protobuf.Internal.EnumLite {
        LENGTH(2),
        HASLENGTH_NOT_SET(0);
        private int value = 0;
        private HasLengthCase(int value) {
          this.value = value;
        }
        public static HasLengthCase valueOf(int value) {
          switch (value) {
            case 2: return LENGTH;
            case 0: return HASLENGTH_NOT_SET;
            default: throw new java.lang.IllegalArgumentException(
              "Value is undefined for this oneof enum.");
          }
        }
        public int getNumber() {
          return this.value;
        }
      };

      public HasLengthCase
      getHasLengthCase() {
        return HasLengthCase.valueOf(
            hasLengthCase_);
      }

      public static final int START_FIELD_NUMBER = 1;
      private long start_;
      /**
       * <code>optional int64 start = 1;</code>
       *
       * <pre>
       * Start index of the slice, starting at 0.
       * </pre>
       */
      public long getStart() {
        return start_;
      }

      public static final int LENGTH_FIELD_NUMBER = 2;
      /**
       * <code>optional int64 length = 2;</code>
       */
      public long getLength() {
        if (hasLengthCase_ == 2) {
          return (java.lang.Long) hasLength_;
        }
        return 0L;
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (start_ != 0L) {
          output.writeInt64(1, start_);
        }
        if (hasLengthCase_ == 2) {
          output.writeInt64(
              2, (long)((java.lang.Long) hasLength_));
        }
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (start_ != 0L) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt64Size(1, start_);
        }
        if (hasLengthCase_ == 2) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt64Size(
                2, (long)((java.lang.Long) hasLength_));
        }
        memoizedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      public static tensorflow.TensorSlice.TensorSliceProto.Extent parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static tensorflow.TensorSlice.TensorSliceProto.Extent parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static tensorflow.TensorSlice.TensorSliceProto.Extent parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static tensorflow.TensorSlice.TensorSliceProto.Extent parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static tensorflow.TensorSlice.TensorSliceProto.Extent parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static tensorflow.TensorSlice.TensorSliceProto.Extent parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static tensorflow.TensorSlice.TensorSliceProto.Extent parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static tensorflow.TensorSlice.TensorSliceProto.Extent parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static tensorflow.TensorSlice.TensorSliceProto.Extent parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static tensorflow.TensorSlice.TensorSliceProto.Extent parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(tensorflow.TensorSlice.TensorSliceProto.Extent prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code tensorflow.TensorSliceProto.Extent}
       *
       * <pre>
       * Extent of the slice in one dimension.
       * </pre>
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:tensorflow.TensorSliceProto.Extent)
          tensorflow.TensorSlice.TensorSliceProto.ExtentOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return tensorflow.TensorSlice.internal_static_tensorflow_TensorSliceProto_Extent_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return tensorflow.TensorSlice.internal_static_tensorflow_TensorSliceProto_Extent_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  tensorflow.TensorSlice.TensorSliceProto.Extent.class, tensorflow.TensorSlice.TensorSliceProto.Extent.Builder.class);
        }

        // Construct using tensorflow.TensorSlice.TensorSliceProto.Extent.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          start_ = 0L;

          hasLengthCase_ = 0;
          hasLength_ = null;
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return tensorflow.TensorSlice.internal_static_tensorflow_TensorSliceProto_Extent_descriptor;
        }

        public tensorflow.TensorSlice.TensorSliceProto.Extent getDefaultInstanceForType() {
          return tensorflow.TensorSlice.TensorSliceProto.Extent.getDefaultInstance();
        }

        public tensorflow.TensorSlice.TensorSliceProto.Extent build() {
          tensorflow.TensorSlice.TensorSliceProto.Extent result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public tensorflow.TensorSlice.TensorSliceProto.Extent buildPartial() {
          tensorflow.TensorSlice.TensorSliceProto.Extent result = new tensorflow.TensorSlice.TensorSliceProto.Extent(this);
          result.start_ = start_;
          if (hasLengthCase_ == 2) {
            result.hasLength_ = hasLength_;
          }
          result.hasLengthCase_ = hasLengthCase_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof tensorflow.TensorSlice.TensorSliceProto.Extent) {
            return mergeFrom((tensorflow.TensorSlice.TensorSliceProto.Extent)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(tensorflow.TensorSlice.TensorSliceProto.Extent other) {
          if (other == tensorflow.TensorSlice.TensorSliceProto.Extent.getDefaultInstance()) return this;
          if (other.getStart() != 0L) {
            setStart(other.getStart());
          }
          switch (other.getHasLengthCase()) {
            case LENGTH: {
              setLength(other.getLength());
              break;
            }
            case HASLENGTH_NOT_SET: {
              break;
            }
          }
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          tensorflow.TensorSlice.TensorSliceProto.Extent parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (tensorflow.TensorSlice.TensorSliceProto.Extent) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int hasLengthCase_ = 0;
        private java.lang.Object hasLength_;
        public HasLengthCase
            getHasLengthCase() {
          return HasLengthCase.valueOf(
              hasLengthCase_);
        }

        public Builder clearHasLength() {
          hasLengthCase_ = 0;
          hasLength_ = null;
          onChanged();
          return this;
        }


        private long start_ ;
        /**
         * <code>optional int64 start = 1;</code>
         *
         * <pre>
         * Start index of the slice, starting at 0.
         * </pre>
         */
        public long getStart() {
          return start_;
        }
        /**
         * <code>optional int64 start = 1;</code>
         *
         * <pre>
         * Start index of the slice, starting at 0.
         * </pre>
         */
        public Builder setStart(long value) {
          
          start_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int64 start = 1;</code>
         *
         * <pre>
         * Start index of the slice, starting at 0.
         * </pre>
         */
        public Builder clearStart() {
          
          start_ = 0L;
          onChanged();
          return this;
        }

        /**
         * <code>optional int64 length = 2;</code>
         */
        public long getLength() {
          if (hasLengthCase_ == 2) {
            return (java.lang.Long) hasLength_;
          }
          return 0L;
        }
        /**
         * <code>optional int64 length = 2;</code>
         */
        public Builder setLength(long value) {
          hasLengthCase_ = 2;
          hasLength_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int64 length = 2;</code>
         */
        public Builder clearLength() {
          if (hasLengthCase_ == 2) {
            hasLengthCase_ = 0;
            hasLength_ = null;
            onChanged();
          }
          return this;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }


        // @@protoc_insertion_point(builder_scope:tensorflow.TensorSliceProto.Extent)
      }

      // @@protoc_insertion_point(class_scope:tensorflow.TensorSliceProto.Extent)
      private static final tensorflow.TensorSlice.TensorSliceProto.Extent DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new tensorflow.TensorSlice.TensorSliceProto.Extent();
      }

      public static tensorflow.TensorSlice.TensorSliceProto.Extent getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Extent>
          PARSER = new com.google.protobuf.AbstractParser<Extent>() {
        public Extent parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          try {
            return new Extent(input, extensionRegistry);
          } catch (RuntimeException e) {
            if (e.getCause() instanceof
                com.google.protobuf.InvalidProtocolBufferException) {
              throw (com.google.protobuf.InvalidProtocolBufferException)
                  e.getCause();
            }
            throw e;
          }
        }
      };

      public static com.google.protobuf.Parser<Extent> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Extent> getParserForType() {
        return PARSER;
      }

      public tensorflow.TensorSlice.TensorSliceProto.Extent getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public static final int EXTENT_FIELD_NUMBER = 1;
    private java.util.List<tensorflow.TensorSlice.TensorSliceProto.Extent> extent_;
    /**
     * <code>repeated .tensorflow.TensorSliceProto.Extent extent = 1;</code>
     *
     * <pre>
     * Extent of the slice in all tensor dimensions.
     * Must have one entry for each of the dimension of the tensor that this
     * slice belongs to.  The order of sizes is the same as the order of
     * dimensions in the TensorShape.
     * </pre>
     */
    public java.util.List<tensorflow.TensorSlice.TensorSliceProto.Extent> getExtentList() {
      return extent_;
    }
    /**
     * <code>repeated .tensorflow.TensorSliceProto.Extent extent = 1;</code>
     *
     * <pre>
     * Extent of the slice in all tensor dimensions.
     * Must have one entry for each of the dimension of the tensor that this
     * slice belongs to.  The order of sizes is the same as the order of
     * dimensions in the TensorShape.
     * </pre>
     */
    public java.util.List<? extends tensorflow.TensorSlice.TensorSliceProto.ExtentOrBuilder> 
        getExtentOrBuilderList() {
      return extent_;
    }
    /**
     * <code>repeated .tensorflow.TensorSliceProto.Extent extent = 1;</code>
     *
     * <pre>
     * Extent of the slice in all tensor dimensions.
     * Must have one entry for each of the dimension of the tensor that this
     * slice belongs to.  The order of sizes is the same as the order of
     * dimensions in the TensorShape.
     * </pre>
     */
    public int getExtentCount() {
      return extent_.size();
    }
    /**
     * <code>repeated .tensorflow.TensorSliceProto.Extent extent = 1;</code>
     *
     * <pre>
     * Extent of the slice in all tensor dimensions.
     * Must have one entry for each of the dimension of the tensor that this
     * slice belongs to.  The order of sizes is the same as the order of
     * dimensions in the TensorShape.
     * </pre>
     */
    public tensorflow.TensorSlice.TensorSliceProto.Extent getExtent(int index) {
      return extent_.get(index);
    }
    /**
     * <code>repeated .tensorflow.TensorSliceProto.Extent extent = 1;</code>
     *
     * <pre>
     * Extent of the slice in all tensor dimensions.
     * Must have one entry for each of the dimension of the tensor that this
     * slice belongs to.  The order of sizes is the same as the order of
     * dimensions in the TensorShape.
     * </pre>
     */
    public tensorflow.TensorSlice.TensorSliceProto.ExtentOrBuilder getExtentOrBuilder(
        int index) {
      return extent_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < extent_.size(); i++) {
        output.writeMessage(1, extent_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < extent_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, extent_.get(i));
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static tensorflow.TensorSlice.TensorSliceProto parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.TensorSlice.TensorSliceProto parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.TensorSlice.TensorSliceProto parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.TensorSlice.TensorSliceProto parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.TensorSlice.TensorSliceProto parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static tensorflow.TensorSlice.TensorSliceProto parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static tensorflow.TensorSlice.TensorSliceProto parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static tensorflow.TensorSlice.TensorSliceProto parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static tensorflow.TensorSlice.TensorSliceProto parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static tensorflow.TensorSlice.TensorSliceProto parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(tensorflow.TensorSlice.TensorSliceProto prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code tensorflow.TensorSliceProto}
     *
     * <pre>
     * Can only be interpreted if you know the corresponding TensorShape.
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:tensorflow.TensorSliceProto)
        tensorflow.TensorSlice.TensorSliceProtoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return tensorflow.TensorSlice.internal_static_tensorflow_TensorSliceProto_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return tensorflow.TensorSlice.internal_static_tensorflow_TensorSliceProto_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                tensorflow.TensorSlice.TensorSliceProto.class, tensorflow.TensorSlice.TensorSliceProto.Builder.class);
      }

      // Construct using tensorflow.TensorSlice.TensorSliceProto.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getExtentFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (extentBuilder_ == null) {
          extent_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          extentBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return tensorflow.TensorSlice.internal_static_tensorflow_TensorSliceProto_descriptor;
      }

      public tensorflow.TensorSlice.TensorSliceProto getDefaultInstanceForType() {
        return tensorflow.TensorSlice.TensorSliceProto.getDefaultInstance();
      }

      public tensorflow.TensorSlice.TensorSliceProto build() {
        tensorflow.TensorSlice.TensorSliceProto result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public tensorflow.TensorSlice.TensorSliceProto buildPartial() {
        tensorflow.TensorSlice.TensorSliceProto result = new tensorflow.TensorSlice.TensorSliceProto(this);
        int from_bitField0_ = bitField0_;
        if (extentBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            extent_ = java.util.Collections.unmodifiableList(extent_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.extent_ = extent_;
        } else {
          result.extent_ = extentBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof tensorflow.TensorSlice.TensorSliceProto) {
          return mergeFrom((tensorflow.TensorSlice.TensorSliceProto)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(tensorflow.TensorSlice.TensorSliceProto other) {
        if (other == tensorflow.TensorSlice.TensorSliceProto.getDefaultInstance()) return this;
        if (extentBuilder_ == null) {
          if (!other.extent_.isEmpty()) {
            if (extent_.isEmpty()) {
              extent_ = other.extent_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureExtentIsMutable();
              extent_.addAll(other.extent_);
            }
            onChanged();
          }
        } else {
          if (!other.extent_.isEmpty()) {
            if (extentBuilder_.isEmpty()) {
              extentBuilder_.dispose();
              extentBuilder_ = null;
              extent_ = other.extent_;
              bitField0_ = (bitField0_ & ~0x00000001);
              extentBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getExtentFieldBuilder() : null;
            } else {
              extentBuilder_.addAllMessages(other.extent_);
            }
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        tensorflow.TensorSlice.TensorSliceProto parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (tensorflow.TensorSlice.TensorSliceProto) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<tensorflow.TensorSlice.TensorSliceProto.Extent> extent_ =
        java.util.Collections.emptyList();
      private void ensureExtentIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          extent_ = new java.util.ArrayList<tensorflow.TensorSlice.TensorSliceProto.Extent>(extent_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          tensorflow.TensorSlice.TensorSliceProto.Extent, tensorflow.TensorSlice.TensorSliceProto.Extent.Builder, tensorflow.TensorSlice.TensorSliceProto.ExtentOrBuilder> extentBuilder_;

      /**
       * <code>repeated .tensorflow.TensorSliceProto.Extent extent = 1;</code>
       *
       * <pre>
       * Extent of the slice in all tensor dimensions.
       * Must have one entry for each of the dimension of the tensor that this
       * slice belongs to.  The order of sizes is the same as the order of
       * dimensions in the TensorShape.
       * </pre>
       */
      public java.util.List<tensorflow.TensorSlice.TensorSliceProto.Extent> getExtentList() {
        if (extentBuilder_ == null) {
          return java.util.Collections.unmodifiableList(extent_);
        } else {
          return extentBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .tensorflow.TensorSliceProto.Extent extent = 1;</code>
       *
       * <pre>
       * Extent of the slice in all tensor dimensions.
       * Must have one entry for each of the dimension of the tensor that this
       * slice belongs to.  The order of sizes is the same as the order of
       * dimensions in the TensorShape.
       * </pre>
       */
      public int getExtentCount() {
        if (extentBuilder_ == null) {
          return extent_.size();
        } else {
          return extentBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .tensorflow.TensorSliceProto.Extent extent = 1;</code>
       *
       * <pre>
       * Extent of the slice in all tensor dimensions.
       * Must have one entry for each of the dimension of the tensor that this
       * slice belongs to.  The order of sizes is the same as the order of
       * dimensions in the TensorShape.
       * </pre>
       */
      public tensorflow.TensorSlice.TensorSliceProto.Extent getExtent(int index) {
        if (extentBuilder_ == null) {
          return extent_.get(index);
        } else {
          return extentBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .tensorflow.TensorSliceProto.Extent extent = 1;</code>
       *
       * <pre>
       * Extent of the slice in all tensor dimensions.
       * Must have one entry for each of the dimension of the tensor that this
       * slice belongs to.  The order of sizes is the same as the order of
       * dimensions in the TensorShape.
       * </pre>
       */
      public Builder setExtent(
          int index, tensorflow.TensorSlice.TensorSliceProto.Extent value) {
        if (extentBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureExtentIsMutable();
          extent_.set(index, value);
          onChanged();
        } else {
          extentBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .tensorflow.TensorSliceProto.Extent extent = 1;</code>
       *
       * <pre>
       * Extent of the slice in all tensor dimensions.
       * Must have one entry for each of the dimension of the tensor that this
       * slice belongs to.  The order of sizes is the same as the order of
       * dimensions in the TensorShape.
       * </pre>
       */
      public Builder setExtent(
          int index, tensorflow.TensorSlice.TensorSliceProto.Extent.Builder builderForValue) {
        if (extentBuilder_ == null) {
          ensureExtentIsMutable();
          extent_.set(index, builderForValue.build());
          onChanged();
        } else {
          extentBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .tensorflow.TensorSliceProto.Extent extent = 1;</code>
       *
       * <pre>
       * Extent of the slice in all tensor dimensions.
       * Must have one entry for each of the dimension of the tensor that this
       * slice belongs to.  The order of sizes is the same as the order of
       * dimensions in the TensorShape.
       * </pre>
       */
      public Builder addExtent(tensorflow.TensorSlice.TensorSliceProto.Extent value) {
        if (extentBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureExtentIsMutable();
          extent_.add(value);
          onChanged();
        } else {
          extentBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .tensorflow.TensorSliceProto.Extent extent = 1;</code>
       *
       * <pre>
       * Extent of the slice in all tensor dimensions.
       * Must have one entry for each of the dimension of the tensor that this
       * slice belongs to.  The order of sizes is the same as the order of
       * dimensions in the TensorShape.
       * </pre>
       */
      public Builder addExtent(
          int index, tensorflow.TensorSlice.TensorSliceProto.Extent value) {
        if (extentBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureExtentIsMutable();
          extent_.add(index, value);
          onChanged();
        } else {
          extentBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .tensorflow.TensorSliceProto.Extent extent = 1;</code>
       *
       * <pre>
       * Extent of the slice in all tensor dimensions.
       * Must have one entry for each of the dimension of the tensor that this
       * slice belongs to.  The order of sizes is the same as the order of
       * dimensions in the TensorShape.
       * </pre>
       */
      public Builder addExtent(
          tensorflow.TensorSlice.TensorSliceProto.Extent.Builder builderForValue) {
        if (extentBuilder_ == null) {
          ensureExtentIsMutable();
          extent_.add(builderForValue.build());
          onChanged();
        } else {
          extentBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .tensorflow.TensorSliceProto.Extent extent = 1;</code>
       *
       * <pre>
       * Extent of the slice in all tensor dimensions.
       * Must have one entry for each of the dimension of the tensor that this
       * slice belongs to.  The order of sizes is the same as the order of
       * dimensions in the TensorShape.
       * </pre>
       */
      public Builder addExtent(
          int index, tensorflow.TensorSlice.TensorSliceProto.Extent.Builder builderForValue) {
        if (extentBuilder_ == null) {
          ensureExtentIsMutable();
          extent_.add(index, builderForValue.build());
          onChanged();
        } else {
          extentBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .tensorflow.TensorSliceProto.Extent extent = 1;</code>
       *
       * <pre>
       * Extent of the slice in all tensor dimensions.
       * Must have one entry for each of the dimension of the tensor that this
       * slice belongs to.  The order of sizes is the same as the order of
       * dimensions in the TensorShape.
       * </pre>
       */
      public Builder addAllExtent(
          java.lang.Iterable<? extends tensorflow.TensorSlice.TensorSliceProto.Extent> values) {
        if (extentBuilder_ == null) {
          ensureExtentIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, extent_);
          onChanged();
        } else {
          extentBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .tensorflow.TensorSliceProto.Extent extent = 1;</code>
       *
       * <pre>
       * Extent of the slice in all tensor dimensions.
       * Must have one entry for each of the dimension of the tensor that this
       * slice belongs to.  The order of sizes is the same as the order of
       * dimensions in the TensorShape.
       * </pre>
       */
      public Builder clearExtent() {
        if (extentBuilder_ == null) {
          extent_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          extentBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .tensorflow.TensorSliceProto.Extent extent = 1;</code>
       *
       * <pre>
       * Extent of the slice in all tensor dimensions.
       * Must have one entry for each of the dimension of the tensor that this
       * slice belongs to.  The order of sizes is the same as the order of
       * dimensions in the TensorShape.
       * </pre>
       */
      public Builder removeExtent(int index) {
        if (extentBuilder_ == null) {
          ensureExtentIsMutable();
          extent_.remove(index);
          onChanged();
        } else {
          extentBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .tensorflow.TensorSliceProto.Extent extent = 1;</code>
       *
       * <pre>
       * Extent of the slice in all tensor dimensions.
       * Must have one entry for each of the dimension of the tensor that this
       * slice belongs to.  The order of sizes is the same as the order of
       * dimensions in the TensorShape.
       * </pre>
       */
      public tensorflow.TensorSlice.TensorSliceProto.Extent.Builder getExtentBuilder(
          int index) {
        return getExtentFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .tensorflow.TensorSliceProto.Extent extent = 1;</code>
       *
       * <pre>
       * Extent of the slice in all tensor dimensions.
       * Must have one entry for each of the dimension of the tensor that this
       * slice belongs to.  The order of sizes is the same as the order of
       * dimensions in the TensorShape.
       * </pre>
       */
      public tensorflow.TensorSlice.TensorSliceProto.ExtentOrBuilder getExtentOrBuilder(
          int index) {
        if (extentBuilder_ == null) {
          return extent_.get(index);  } else {
          return extentBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .tensorflow.TensorSliceProto.Extent extent = 1;</code>
       *
       * <pre>
       * Extent of the slice in all tensor dimensions.
       * Must have one entry for each of the dimension of the tensor that this
       * slice belongs to.  The order of sizes is the same as the order of
       * dimensions in the TensorShape.
       * </pre>
       */
      public java.util.List<? extends tensorflow.TensorSlice.TensorSliceProto.ExtentOrBuilder> 
           getExtentOrBuilderList() {
        if (extentBuilder_ != null) {
          return extentBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(extent_);
        }
      }
      /**
       * <code>repeated .tensorflow.TensorSliceProto.Extent extent = 1;</code>
       *
       * <pre>
       * Extent of the slice in all tensor dimensions.
       * Must have one entry for each of the dimension of the tensor that this
       * slice belongs to.  The order of sizes is the same as the order of
       * dimensions in the TensorShape.
       * </pre>
       */
      public tensorflow.TensorSlice.TensorSliceProto.Extent.Builder addExtentBuilder() {
        return getExtentFieldBuilder().addBuilder(
            tensorflow.TensorSlice.TensorSliceProto.Extent.getDefaultInstance());
      }
      /**
       * <code>repeated .tensorflow.TensorSliceProto.Extent extent = 1;</code>
       *
       * <pre>
       * Extent of the slice in all tensor dimensions.
       * Must have one entry for each of the dimension of the tensor that this
       * slice belongs to.  The order of sizes is the same as the order of
       * dimensions in the TensorShape.
       * </pre>
       */
      public tensorflow.TensorSlice.TensorSliceProto.Extent.Builder addExtentBuilder(
          int index) {
        return getExtentFieldBuilder().addBuilder(
            index, tensorflow.TensorSlice.TensorSliceProto.Extent.getDefaultInstance());
      }
      /**
       * <code>repeated .tensorflow.TensorSliceProto.Extent extent = 1;</code>
       *
       * <pre>
       * Extent of the slice in all tensor dimensions.
       * Must have one entry for each of the dimension of the tensor that this
       * slice belongs to.  The order of sizes is the same as the order of
       * dimensions in the TensorShape.
       * </pre>
       */
      public java.util.List<tensorflow.TensorSlice.TensorSliceProto.Extent.Builder> 
           getExtentBuilderList() {
        return getExtentFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          tensorflow.TensorSlice.TensorSliceProto.Extent, tensorflow.TensorSlice.TensorSliceProto.Extent.Builder, tensorflow.TensorSlice.TensorSliceProto.ExtentOrBuilder> 
          getExtentFieldBuilder() {
        if (extentBuilder_ == null) {
          extentBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              tensorflow.TensorSlice.TensorSliceProto.Extent, tensorflow.TensorSlice.TensorSliceProto.Extent.Builder, tensorflow.TensorSlice.TensorSliceProto.ExtentOrBuilder>(
                  extent_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          extent_ = null;
        }
        return extentBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:tensorflow.TensorSliceProto)
    }

    // @@protoc_insertion_point(class_scope:tensorflow.TensorSliceProto)
    private static final tensorflow.TensorSlice.TensorSliceProto DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new tensorflow.TensorSlice.TensorSliceProto();
    }

    public static tensorflow.TensorSlice.TensorSliceProto getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TensorSliceProto>
        PARSER = new com.google.protobuf.AbstractParser<TensorSliceProto>() {
      public TensorSliceProto parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        try {
          return new TensorSliceProto(input, extensionRegistry);
        } catch (RuntimeException e) {
          if (e.getCause() instanceof
              com.google.protobuf.InvalidProtocolBufferException) {
            throw (com.google.protobuf.InvalidProtocolBufferException)
                e.getCause();
          }
          throw e;
        }
      }
    };

    public static com.google.protobuf.Parser<TensorSliceProto> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TensorSliceProto> getParserForType() {
      return PARSER;
    }

    public tensorflow.TensorSlice.TensorSliceProto getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_tensorflow_TensorSliceProto_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_tensorflow_TensorSliceProto_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_tensorflow_TensorSliceProto_Extent_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_tensorflow_TensorSliceProto_Extent_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n,tensorflow/core/framework/tensor_slice" +
      ".proto\022\ntensorflow\"\200\001\n\020TensorSliceProto\022" +
      "3\n\006extent\030\001 \003(\0132#.tensorflow.TensorSlice" +
      "Proto.Extent\0327\n\006Extent\022\r\n\005start\030\001 \001(\003\022\020\n" +
      "\006length\030\002 \001(\003H\000B\014\n\nhas_lengthb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_tensorflow_TensorSliceProto_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_tensorflow_TensorSliceProto_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_tensorflow_TensorSliceProto_descriptor,
        new java.lang.String[] { "Extent", });
    internal_static_tensorflow_TensorSliceProto_Extent_descriptor =
      internal_static_tensorflow_TensorSliceProto_descriptor.getNestedTypes().get(0);
    internal_static_tensorflow_TensorSliceProto_Extent_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_tensorflow_TensorSliceProto_Extent_descriptor,
        new java.lang.String[] { "Start", "Length", "HasLength", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
